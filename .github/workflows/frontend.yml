name: Frontend - Test, Build & Push

on:
  repository_dispatch:
    types: [build-frontend]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to tag and push'
        required: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ECR_URI: ${{ secrets.ECR_FRONTEND_URI }}

    steps:
      - name: Clone Source Repository
        run: |
          git clone https://github.com/punnam14/recommendation-engine-microservices.git source

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install Dependencies
        working-directory: ./source/frontend-service
        run: npm install

      - name: Run Frontend Tests
        working-directory: ./source/frontend-service
        run: |
          npm run test:ci || { echo "Tests failed"; exit 1; }

      - name: Get Version from Payload
        run: echo "VERSION=${{ github.event.client_payload.version }}" >> $GITHUB_ENV

      - name: Docker Login to ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_URI

      - name: Build Docker Image
        working-directory: ./source/frontend-service
        run: |
          docker build -t frontend-service \
            --build-arg REACT_APP_PRODUCT_API=/products \
            --build-arg REACT_APP_RECOMMENDATION_API=/recommendations \
            .
          docker tag frontend-service:latest $ECR_URI:${{ env.VERSION }}
          docker tag frontend-service:latest $ECR_URI:latest

      - name: Push to ECR
        run: |
          docker push $ECR_URI:${{ env.VERSION }}
          docker push $ECR_URI:latest

      - name: Install yq
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq

      - name: Clone Infra Repository
        run: |
          git clone https://x-access-token:${{ secrets.TOKEN_GITHUB }}@github.com/punnam14/recommendation-engine-infra-repo.git infra-repo

      - name: Update Deployment YAML with New Version
        run: |
          cd infra-repo/kubernetes/qa
          yq eval -i '.spec.template.spec.containers[0].image = "${{ env.ECR_URI }}:${{ env.VERSION }}"' frontend-deployment.yml

      - name: Update Last Updated Service Metadata
        working-directory: infra-repo
        run: |
          echo "{\"service\":\"frontend\", \"version\":\"${{ env.VERSION }}\"}" > kubernetes/argocd/meta/last-service-updated.json
          git add kubernetes/argocd/meta/last-service-updated.json

      - name: Commit and Push Changes to Infra Repo
        working-directory: infra-repo
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "chore: update frontend image to version ${{ env.VERSION }}"
          git push

      