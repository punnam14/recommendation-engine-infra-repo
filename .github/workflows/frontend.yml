name: Frontend - Test, Version, Build & Push

on:
  push:
    paths:
      - 'frontend-service/**'
    branches: [main]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend-service

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ECR_URI: ${{ secrets.ECR_FRONTEND_URI }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Validate Conventional Commit Message
        uses: amannn/action-semantic-pull-request@v5
        with:
          types: |
            feat
            fix
            chore
            refactor
            test
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}

      - name: Run Frontend Tests
        run: |
          npm install
          npm run test:ci || { echo "Tests failed"; exit 1; }

      - name: Bump version with standard-version
        run: |
          npm install
          npx standard-version --skip.tag --skip.commit
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Docker Login to ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_URI

      - name: Build Docker Image
        run: |
          docker build -t frontend-service .
          docker tag frontend-service:latest $ECR_URI:v${{ env.VERSION }}
          docker tag frontend-service:latest $ECR_URI:latest

      - name: Push to ECR
        run: |
          docker push $ECR_URI:${{ env.VERSION }}
          docker push $ECR_URI:latest